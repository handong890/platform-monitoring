buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'PlatformMonitoring'
    version = '0.0.1-SNAPSHOT'
    manifest {
        attributes 'Main-Class': 'io.pivotal.plaformMonitoring.PlatformMonitoringApplication'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile(
        'org.springframework.boot:spring-boot-starter-web:1.5.2.RELEASE',
        'org.springframework.boot:spring-boot-devtools:1.5.2.RELEASE', // hot swapping
        'org.springframework.boot:spring-boot-starter-thymeleaf:1.5.2.RELEASE',

        project(':dashboard_api'),
    )

    testCompile(
        'org.assertj:assertj-core:3.6.2',
        'org.springframework.boot:spring-boot-starter-test:1.5.2.RELEASE',
        'org.powermock:powermock-mockito-release-full:1.6.4',
        'org.awaitility:awaitility:2.0.0'
    )
}

String ANSI_RESET = "\u001B[0m";
String ANSI_RED = "\u001B[31m";
String ANSI_GREEN = "\u001B[32m";
String ANSI_YELLOW = "\u001B[33m";
boolean verboseTests = System.properties['verboseTests'] != null

test {
    afterTest { desc, result ->
        String color

        switch (result.resultType) {
            case TestResult.ResultType.SUCCESS:
                color = ANSI_GREEN
                break
            case TestResult.ResultType.FAILURE:
                color = ANSI_RED
                break
            case TestResult.ResultType.SKIPPED:
                color = ANSI_YELLOW
                break
            default:
                color = ANSI_RESET
                break
        }

        println "${color}${result.resultType} $ANSI_RESET: ${desc.name} (${desc.className})"
    }

    testLogging {
        exceptionFormat 'full'
        showCauses true
        showExceptions true
        showStackTraces verboseTests     // switch me on with -D verboseTests
        showStandardStreams verboseTests // switch me on with -D verboseTests
    }
}